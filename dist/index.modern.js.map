{"version":3,"file":"index.modern.js","sources":["../src/components/Post.js","../src/components/Map.js","../src/components/Add.js","../src/components/Edit.js","../src/components/Search.js","../src/App.js","../src/index.js"],"sourcesContent":["const Post = (props) => {\n  return (\n    <>\n      <div className=\"card text-center\" style={{ width: '45rem' }}>\n        <div>{props.post.location}</div>\n        <img src={props.post.img} />\n        <p>{props.post.post}</p>\n        <p>{props.post.date}</p>\n      </div>\n    </>\n  )\n}\n\nexport default Post\n","import React, { Component } from 'react'\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api'\n\nconst options = {\n  zoomControlOptions: {\n    position: google.maps.ControlPosition.RIGHT_CENTER, // 'right-center' ,\n    // ...otherOptions\n  },\n}\n\nfunction MyComponent() {\n  const { isLoaded, loadError } = useJsApiLoader({\n    googleMapsApiKey: 'AIzaSyD9Z897Itp3KWn7Tyg0CcCJnlKNMsrWVvs', // ,\n    // ...otherOptions\n  })\n\n  const renderMap = () => {\n    // wrapping to a function is useful in case you want to access `window.google`\n    // to eg. setup options or create latLng object, it won't be available otherwise\n    // feel free to render directly if you don't need that\n    const onLoad = React.useCallback(function onLoad(mapInstance) {\n      // do something with map Instance\n    })\n    return (\n      <GoogleMap options={options} onLoad={onLoad}>\n        {\n          // ...Your map components\n        }\n      </GoogleMap>\n    )\n  }\n\n  if (loadError) {\n    return <div>Map cannot be loaded right now, sorry.</div>\n  }\n\n  return isLoaded ? renderMap() : <Spinner />\n}\nexport default Map\n","import { useState } from 'react'\nimport Map from './Map'\n\nconst Add = (props) => {\n  const [post, setPost] = useState({ post: '', img: '', location: '', date: '' })\n\n  const handleChange = (event) => {\n    setPost({ ...post, [event.target.name]: event.target.value })\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    props.handleCreate(post)\n  }\n\n  return (\n    <div className=\"container w-50 \">\n      <div\n        className=\"p-5 mb-5 bg-light rounded w-50\n      m-auto \"\n      >\n        <form onSubmit={handleSubmit}>\n          <label className=\"form-label\" htmlFor=\"location \">\n            location :{' '}\n          </label>\n          <input className=\" form-control \" type=\"text\" name=\"location\" onChange={handleChange} />\n          <br />\n          <br />\n          <div className=\"mb-3\">\n            <label className=\"form-label\" htmlFor=\"post\">\n              Post :{' '}\n            </label>\n            <input className=\" form-control \" type=\"text\" name=\"post\" onChange={handleChange} />\n            <br />\n            <br />\n          </div>\n          <div className=\"mb-3\">\n            <label className=\"form-label\" htmlFor=\"date\">\n              date :{' '}\n            </label>{' '}\n            <br></br>\n            <input className=\" form-control \" type=\"date\" name=\"date\" onChange={handleChange} />\n            <br></br>\n          </div>\n          <div className=\"mb-3\">\n            <label className=\"form-label\" htmlFor=\"img\">\n              Image :{' '}\n            </label>\n            <input className=\" form-control \" type=\"text\" name=\"img\" onChange={handleChange} />\n            <br></br>\n          </div>\n          <input className=\"btn btn-danger\" type=\"submit\" />\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default Add\n","import { useState } from 'react'\n\nconst Edit = (props) => {\n  const [post, setPost] = useState({ ...props.post })\n\n  //   edit\n  //   edit\n  // const [editAlert, setEditAlert] = useState(false)\n  // const [value, setValue] = useState(null);\n  //   edit\n  //   edit\n  const handleChange = (event) => {\n    setPost({ ...post, [event.target.name]: event.target.value })\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    props.handleEdit(post)\n  }\n\n  return (\n    <div>\n      {/* <button onClick={}>Edit Post</button> */}\n      <details>\n        <summary>Edit Tweet</summary>\n\n        <form onSubmit={handleSubmit}>\n          <label htmlFor=\"location\">location : </label>\n          <input type=\"text\" name=\"location\" onChange={handleChange} value={post.location} />\n          <br />\n          <br />\n          <label htmlFor=\"post\">Post : </label>\n          <input type=\"text\" name=\"post\" onChange={handleChange} value={post.post} />\n          <br />\n          <br />\n          <label htmlFor=\"date\">date : </label>\n          <input type=\"date\" name=\"date\" onChange={handleChange} value={post.date} />\n          <br></br>\n          <label htmlFor=\"img\">Image : </label>\n          <input type=\"text\" name=\"img\" onChange={handleChange} value={post.img} />\n          <br></br>\n          <input className=\"\" type=\"submit\" />\n        </form>\n      </details>\n    </div>\n  )\n}\n\nexport default Edit\n","// import { useState, useRef } from 'react'\n\n// const Search = () => {\n//   const [items, setItems] = useState([])\n//   //   this will be post\n//   const [query, setQuery] = useState('')\n//   //    this will be what is searched\n//   const inputRef = useRef()\n//   //   inputRef allows us to access input element below\n\n//   const filteredItems = items.filter((item) => {\n//     return item.toLowerCase().includes(query.toLowerCase())\n//   })\n//   //   could wrap filteredItems in useMemo() hook to improve performance\n\n//   function onSubmit(e) {\n//     e.preventDefault()\n//     // makes sure form doesnt refresh page\n\n//     const value = inputRef.current.value\n//     if (value === '') return\n//     // if a empty string... return nothing\n//     setItems((prev) => {\n//       return [...prev, value]\n//       // if not return all previous inputs + new value\n//     })\n//     inputRef.current.value = ''\n//     // sets input text back to an empty string\n//   }\n\n//   return (\n//     <>\n//       Search:\n//       <input value={query} type=\"search\">\n//         value={query}\n//         onChange={(e) => setQuery(e.target.value)}\n//         {/* w/e you search will set the value for Query */}\n//       </input>\n//       <br />\n//       <br />\n//       <form onSubmit={onSubmit}>\n//         New Item: <input ref={inputRef} type=\"text\" />\n//         <button type=\"submit\">Add</button>\n//       </form>\n//       <h3>Items:</h3>\n//       {filteredItems.map((item) => (\n//         <div>{item}</div>\n//       ))}\n//     </>\n//   )\n// }\n\n// export default Search\n\n// import { useState } from 'react'\n\n// const SearchBar = ({ post, setSearchResults }) => {\n//   const handleSubmit = (e) => e.preventDefault()\n\n//   const handleSearchChange = (e) => {\n//     if (!e.target.value) return setSearchResults(post)\n\n//     const resultsArray = post.filter((post) => post.title.includes(e.target.value))\n\n//     setSearchResults(resultsArray)\n//   }\n\n//   return (\n//     <header>\n//       <form onSubmit={handleSubmit}>\n//         <input> type= \"text\" id=\"search\" onChange={handleSearchChange}</input>\n//       </form>\n//       <button>Search</button>\n//     </header>\n//   )\n// }\n\n// export default SearchBar\n\nimport { useState } from 'react'\n\nconst SearchBar = ({ onSearchChange }) => {\n  const [searchInput, setSearchInput] = useState('')\n\n  // Function for Search bar\n  const handleSearchChange = (e) => {\n    e.preventDefault()\n    setSearchInput(e.target.value)\n    onSearchChange(e.target.value)\n  }\n  return (\n    <div className=\"searchBarContainer\">\n      <input type=\"text\" value={searchInput} placeholder=\"Search...\" onChange={handleSearchChange} />\n    </div>\n  )\n}\n\nexport default SearchBar\n","import { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\nimport Post from './components/Post'\nimport Add from './components/Add'\nimport Edit from './components/Edit'\nimport SearchBar from './components/Search'\n\nimport React, { Component } from 'react'\nimport { GoogleMap, LoadScript } from '@react-google-maps/api'\n\nconst App = () => {\n  const [post, setPost] = useState([])\n  // search\n  const [isSearching, setIsSearching] = useState(false)\n  const [filteredPost, setFilteredPost] = useState([])\n  // search\n\n  const getPost = () => {\n    axios\n      .get('http://localhost:3000/twitter')\n      .then(\n        (response) => setPost(response.data),\n        (err) => console.log(err)\n      )\n      .catch((error) => console.log(error))\n  }\n\n  const handleCreate = (data) => {\n    axios.post('http://localhost:3000/twitter/', data).then((response) => {\n      console.log(response)\n      getPost()\n    })\n  }\n\n  const handleEdit = (data) => {\n    axios.put('http://localhost:3000/twitter/' + data._id, data).then((response) => {\n      let newPost = post.map((post) => {\n        return post._id !== data._id ? post : data\n      })\n      setPost(newPost)\n    })\n  }\n\n  const handleDelete = (deletedPost) => {\n    axios.delete('http://localhost:3000/twitter/' + deletedPost._id).then((response) => {\n      getPost()\n    })\n  }\n\n  // search\n  // search\n  // search\n  const onSearchChange = (searchInput) => {\n    const searchInputLower = searchInput.toLowerCase()\n    if (searchInput.length > 0) {\n      setIsSearching(true)\n      const result = post.filter((post) => {\n        return (\n          post.location.toLowerCase().match(searchInputLower) ||\n          post.post.toLowerCase().match(searchInputLower) ||\n          post.date.toLowerCase().match(searchInputLower)\n        )\n      })\n      setFilteredPost(result)\n    } else {\n      setIsSearching(false)\n    }\n  }\n\n  const NoSearchResults = () => {\n    return (\n      <>\n        <p className=\"noResults\">No related posts found...</p>\n      </>\n    )\n  }\n\n  const postToDisplay = isSearching ? filteredPost : post\n  // search\n  // search\n  // search\n  const [show, setShow] = useState(false)\n\n  useEffect(() => {\n    getPost()\n  }, [])\n\n  return (\n    <div className=\"container-fluid m-auto-0\">\n      <nav className=\"navbar bg-light \">\n        <img src=\"\" />\n        <SearchBar onSearchChange={onSearchChange} />\n        <button className=\"btn btn-success\" onClick={() => setShow(!show)}>\n          Add\n        </button>\n        <button></button>\n      </nav>\n      <h1 className=\"text-center\">twitterClone</h1>\n      {show ? <Add handleCreate={handleCreate} /> : null}\n      <div className=\"row post-container text-center\">\n        {postToDisplay.map((post) => {\n          return (\n            <div>\n              <div className=\"col-12\">\n                <Post post={post} />\n              </div>\n\n              <Edit post={post} handleEdit={handleEdit} />\n              <button\n                className=\"btn btn-danger\"\n                onClick={() => {\n                  handleDelete(post)\n                }}\n                value={post._id}\n              >\n                Delete\n              </button>\n            </div>\n          )\n        })}\n        <NoSearchResults />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"names":["props","React","className","style","width","post","location","src","img","date","google","useState","setPost","event","target","name","value","onSubmit","preventDefault","handleCreate","htmlFor","type","onChange","handleChange","handleEdit","onSearchChange","setSearchInput","placeholder","e","isSearching","setIsSearching","setFilteredPost","axios","get","then","response","data","err","log","error","put","_id","map","newPost","show","setShow","useEffect","getPost","SearchBar","searchInput","toLowerCase","length","filter","match","searchInputLower","result","onClick","Add","console","postToDisplay","Post","Edit","NoSearchResults","ReactDOM","createRoot","document","getElementById","render","StrictMode","App"],"mappings":"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"}